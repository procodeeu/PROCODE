services:
  app:
    build: .
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - NODE_OPTIONS=--max-old-space-size=1024
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-password}@postgres:5432/${POSTGRES_DB:-procode}
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - JWT_SECRET=${JWT_SECRET}
      - NUXT_SECRET_KEY=${NUXT_SECRET_KEY}
    depends_on:
      - postgres
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1200MB
        reservations:
          memory: 800MB

  telegram-bot:
    build: .
    command: node telegram-bot-local.js
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - NODE_OPTIONS=--max-old-space-size=256
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-password}@postgres:5432/${POSTGRES_DB:-procode}
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
    depends_on:
      - postgres
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 300MB
        reservations:
          memory: 200MB

  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-procode}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    command: >
      postgres
      -c shared_buffers=128MB
      -c effective_cache_size=300MB
      -c work_mem=4MB
      -c maintenance_work_mem=64MB
      -c max_connections=50
    deploy:
      resources:
        limits:
          memory: 400MB
        reservations:
          memory: 200MB

volumes:
  postgres_data: